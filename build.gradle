buildscript {
    ext {
        // queryDsl
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()

    //timezone 설정
    systemProperty "user.timezone", "UTC"
}

jacoco {
    toolVersion = "0.8.8"
}


jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    def Qdomains = []

    for (qPattern in '**/QA'..'**/QZ') { // qPattern = '**/QA', '**/QB', ... '*.QZ'
        Qdomains.add(qPattern + '*')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["com/example/rework/dto/**",
                                        "com/example/rework/exception/**",
                                        "com/example/rework/filter/**",
                                        "com/example/rework/config/**",
                                        "com/example/rework/handler/**"] + Qdomains)
        })
        )
    }

    finalizedBy 'jacocoTestCoverageVerification'
}


repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.auth0:java-jwt:4.4.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // QueryDSL 설정
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // -- QueryDSL ---
    implementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generatedDir = 'src/main/generated'

clean {
    delete file (generatedDir)
}